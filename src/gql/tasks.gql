mutation createNewTask($taskTitle: String!, $taskDesc: String, $tagId: ID, $epicId: ID, $time: DateTime!) {
    addTask(input: [{ title: $taskTitle, description: $taskDesc, tags: { id: $tagId }, status: Backlog, epic: { id: $epicId }, createdDate: $time }]) {
        task {
            id
            title
            description
            tags {
                id
                title
                color
            }
            createdDate
            status
            epic {
                id
            }
            user {
                id
            }
        }
    }
}

query getEpicTasks($epicId: ID!) {
    queryEpic(filter: { id: [$epicId] }) {
        tasks {
            id
            title
            description
            tags {
                id
                title
                color
            }
            createdDate
            status
            epic {
                id
            }
            user {
                id
            }
        }
    }
}

mutation deleteTaskById($idToDeleteArr: [ID!]) {
    deleteTask(filter: { id: $idToDeleteArr }) {
        numUids
        msg
    }
}

mutation changeTaskStatus($status: Status!, $taskId: ID!) {
    updateTask(input: { filter: { id: [$taskId] }, set: { status: $status } }) {
        numUids
        task {
            id
            status
        }
    }
}
