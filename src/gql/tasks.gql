mutation createNewTask($taskTitle: String!, $taskDesc: String, $tagId: ID, $epicId: ID, $time: DateTime!, $userId: ID) {
    addTask(input: [{ title: $taskTitle, description: $taskDesc, tags: { id: $tagId }, status: Backlog, epic: { id: $epicId }, createdDate: $time, user: { id: $userId } }]) {
        task {
            ...taskResult
        }
    }
}

query getEpicTasks($epicId: ID!) {
    queryEpic(filter: { id: [$epicId] }) {
        tasks {
            ...taskResult
        }
    }
}

mutation deleteTasksById($idToDeleteArr: [ID!]) {
    deleteTask(filter: { id: $idToDeleteArr }) {
        numUids
        msg
    }
}

mutation changeTaskStatus($status: Status!, $taskId: ID!) {
    updateTask(input: { filter: { id: [$taskId] }, set: { status: $status } }) {
        numUids
        task {
            id
            status
        }
    }
}

mutation editTask($taskId: ID!, $taskTitle: String!, $taskDesc: String, $tagId: ID, $userId: ID) {
    updateTask(input: { filter: { id: [$taskId] }, set: { title: $taskTitle, description: $taskDesc, tags: { id: $tagId }, user: { id: $userId } } }) {
        numUids
        task {
            ...taskResult
        }
    }
}

fragment taskResult on Task {
    id
    title
    description
    tags {
        id
        title
        color
    }
    createdDate
    status
    epic {
        id
    }
    user {
        id
        firstName
        lastName
        avatarURL
    }
}
